/*
Copyright 2017-2018 Echo Park Labs

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

For additional information, contact:

email: info@echoparklabs.io
*/

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.epl.protobuf.geometry";
option java_outer_classname = "GeometryOperatorsProto";
option objc_class_prefix = "RTG";
option go_package = "geo-grpc/geometry-client-go/epl/grpc";

package epl.protobuf;

import "epl/protobuf/geometry.proto";

/*
 gRPC Interfaces for working with geometry operators
*/
service GeometryOperators {
    // Execute a single geometry operation
    rpc ExecuteOperation(OperatorRequest) returns (OperatorResult) {}

    // Stream in requests and return a stream of results
    rpc StreamOperations(stream OperatorRequest) returns (stream OperatorResult) {}

    rpc StreamOperationsEx(stream OperatorRequest) returns (stream OperatorResult) {}

    // stream in file chunks for a geometry file type and stream back results for each geometry encountered
    rpc StreamFileOperations(stream FileChunk) returns (stream OperatorResult) {}
}
